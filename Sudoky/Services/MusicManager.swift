//
//  MusicManager.swift
//  Sudoky
//
//  Created by –ï–≤–≥–µ–Ω–∏–π –ó–æ—Ç—á–∏–∫ on 30.05.2025.
//

import AVFoundation

class MusicManager: ObservableObject {
    static let shared = MusicManager()
    private var player: AVAudioPlayer?

    /// –ü—Ä–æ–≤–µ—Ä–∫–∞: –∏–≥—Ä–∞–µ—Ç –ª–∏ –º—É–∑—ã–∫–∞ —Å–µ–π—á–∞—Å
    var isMusicPlaying: Bool {
        player?.isPlaying ?? false
    }

    /// –ó–∞–ø—É—Å–∫–∞–µ—Ç –º—É–∑—ã–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –µ—â—ë –Ω–µ –∏–≥—Ä–∞–µ—Ç
    func playBackgroundMusic(_ filename: String, fileExtension: String = "m4a", loop: Bool = true) {
        guard let url = Bundle.main.url(forResource: filename, withExtension: fileExtension) else {
            print("‚ùå –ú—É–∑—ã–∫–∞ \(filename).\(fileExtension) –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return
        }

        do {
            if player?.isPlaying == true {
                print("üéµ –ú—É–∑—ã–∫–∞ —É–∂–µ –∏–≥—Ä–∞–µ—Ç ‚Äî –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—É—Å–∫ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
                return
            }

            player = try AVAudioPlayer(contentsOf: url)
            player?.numberOfLoops = loop ? -1 : 0
            player?.volume = 0.5
            player?.play()
            print("üéµ –ò–≥—Ä–∞–µ—Ç: \(filename)")
        } catch {
            print("‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: \(error.localizedDescription)")
        }
    }

    /// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º—É–∑—ã–∫—É
    func stopMusic() {
        player?.stop()
        print("‚èπ –ú—É–∑—ã–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    }
}
