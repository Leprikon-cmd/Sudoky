import SwiftUI

struct StartView: View {
    let statsManager: StatsManager
    @Binding var path: NavigationPath
    @AppStorage("playerMotto") private var playerMotto: String = ""

    var body: some View {
        ZStack(alignment: .topTrailing) {
            Image("BackgroundImage")
                .resizable()
                .scaledToFill()
                .ignoresSafeArea()

            VStack(spacing: 20) {
                Spacer()

                Text("–°—É–¥–æ–∫—É. –ü—É—Ç—å –º—É–¥—Ä–µ—Ü–∞")
                    .font(.largeTitle)
                    .bold()

                TextField("–í–ø–∏—à–∏ —Å–≤–æ—é –º—É–¥—Ä–æ—Å—Ç—å...", text: $playerMotto)
                    .font(.footnote)
                    .multilineTextAlignment(.center)
                    .padding(.horizontal)
                    .background(Color.white.opacity(0.2))
                    .cornerRadius(20)

                Button("üß© –ù–æ–≤—ã–π –ü—É—Ç—å") {
                    path.append(Route.difficulty)
                }
                .buttonStyle(.borderedProminent)

                Button("üìú –£—Ä–æ–≤–Ω–∏ –ø–æ–∑–Ω–∞–Ω–∏—è") {
                    path.append(Route.stats)
                }
                .buttonStyle(.bordered)

                if hasSavedGame() {
                    Button("üõ§ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø—É—Ç—å") {
                        // TODO: –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–π –∏–≥—Ä—ã
                    }
                    .buttonStyle(.bordered)
                }

                Spacer()
            }
            .padding()

            Button(action: {
                path.append(Route.settings)
            }) {
                Image(systemName: "book.fill")
                    .padding(12)
                    .background(Color.white.opacity(0.2))
                    .clipShape(Circle())
            }
            .padding()
        }
    }

    func hasSavedGame() -> Bool {
        // TODO: —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–π –∏–≥—Ä—ã
        return false
    }
}

#Preview {
    StartView(
        statsManager: StatsManager(),
        path: Binding.constant(NavigationPath())
    )
}
